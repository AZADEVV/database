postgres=# SELECT * FROM employees;
 emp_id | first_name | last_name |       position       |  salary  | hire_date  | dept_id
--------+------------+-----------+----------------------+----------+------------+---------
      1 | John       | Smith     | Software Engineer    | 75000.00 | 2025-10-13 |       1
      2 | Jane       | Doe       | Senior Developer     | 85000.00 | 2025-10-13 |       1
      3 | Mike       | Brown     | DevOps Engineer      | 80000.00 | 2025-10-13 |       1
      4 | Sarah      | Davis     | Marketing Specialist | 55000.00 | 2025-10-13 |       2
(4 rows)


postgres=#
postgres=#
postgres=# SELECT first_name, position FROM employees;
 first_name |       position
------------+----------------------
 John       | Software Engineer
 Jane       | Senior Developer
 Mike       | DevOps Engineer
 Sarah      | Marketing Specialist
(4 rows)


postgres=#
postgres=# SELECT first_name, salary, salary * 0.10 AS potential_bonus FROM employees;
 first_name |  salary  | potential_bonus
------------+----------+-----------------
 John       | 75000.00 |       7500.0000
 Jane       | 85000.00 |       8500.0000
 Mike       | 80000.00 |       8000.0000
 Sarah      | 55000.00 |       5500.0000
(4 rows)


postgres=#
postgres=#
postgres=# SELECT first_name FROM employees WHERE salary > 70000 AND position = 'Software Engineer';
 first_name
------------
 John
(1 row)


postgres=#
postgres=#
postgres=# SELECT first_name, salary FROM employees WHERE salary BETWEEN 80000 AND 90000;
 first_name |  salary
------------+----------
 Jane       | 85000.00
 Mike       | 80000.00
(2 rows)


postgres=#
postgres=#
postgres=# SELECT first_name FROM employees WHERE first_name LIKE 'Ja%';
 first_name
------------
 Jane
(1 row)


postgres=#
postgres=# SELECT first_name FROM employees WHERE first_name LIKE '%ke';
 first_name
------------
 Mike
(1 row)


postgres=#
postgres=# SELECT first_name FROM employees WHERE first_name ILIKE '%oh';
 first_name
------------
(0 rows)


postgres=#
postgres=#
postgres=# SELECT first_name FROM employees WHERE first_name ~ '^[MJ]';
 first_name
------------
 John
 Jane
 Mike
(3 rows)


postgres=#
postgres=# SELECT first_name, dept_id FROM employees WHERE dept_id IN (1, 2, 3);
 first_name | dept_id
------------+---------
 John       |       1
 Jane       |       1
 Mike       |       1
 Sarah      |       2
(4 rows)


postgres=#
postgres=#
postgres=# SELECT first_name, salary,
postgres-#   CASE
postgres-#     WHEN salary > 100000 THEN 'Senior'
postgres-#     WHEN salary BETWEEN 60000 AND 100000 THEN 'Mid-Level'
postgres-#     ELSE 'Junior'
postgres-#   END AS employee_level
postgres-# FROM employees;
 first_name |  salary  | employee_level
------------+----------+----------------
 John       | 75000.00 | Mid-Level
 Jane       | 85000.00 | Mid-Level
 Mike       | 80000.00 | Mid-Level
 Sarah      | 55000.00 | Junior
(4 rows)


postgres=#
postgres=# WITH position_averages AS (
postgres(#   SELECT
postgres(#     position,
postgres(#     AVG(salary) AS avg_salary
postgres(#   FROM employees
postgres(#   GROUP BY position
postgres(# )
postgres-#
postgres-# SELECT
postgres-#   e.first_name,
postgres-#   e.salary,
postgres-#   e.position,
postgres-#   da.avg_salary
postgres-# FROM employees e
postgres-# JOIN position_averages da ON e.position = da.position
postgres-# WHERE e.salary > da.avg_salary;
 first_name | salary | position | avg_salary
------------+--------+----------+------------
(0 rows)


postgres=#